parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"d6Zo":[function(require,module,exports) {
module.exports={frame:{prefixes:["http","https","file"],title:"Regular Content",description:"HTTP/S URLs can be loaded and displayed in IFrames.",examples:[{query:"layout=a/b&a=https://wikipedia.org&b=http://example.com"},{intro:"If your browser environment permits it (e.g. if you build Flexivis locally and open it from a `file:` URL), you can also load content from `file:` URLs. This can be useful to visualise build outputs, for example.",query:"layout=a/b&a=file://results.html&b=file://generated-image.png",screenshot:!1}]},markdown:{prefixes:["md","md-inline"],title:"Markdown",description:"Render [Markdown](https://en.wikipedia.org/wiki/Markdown) content.",examples:[{query:"layout=a/b&a=md:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.md&b=md-inline:This is _inline_ markdown content"}]},json:{prefixes:["json","json-inline"],title:"JSON",description:"Render JSON in an interactive viewer.",examples:[{query:'layout=a/b&a=json:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/package-lock.json&b=json-inline:{"name": "inline JSON example", id: 42, values: ["foo", "baz", "bar"]}'}]},text:{prefixes:["text","text-inline"],title:"Text",description:"Display plain text. This can be used to display the source of a visualisation alongside the visualisation itself.",examples:[{query:"layout=(a-b)/c&a=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/plaintext.txt&b=text-inline:This is just _plain_ inline text&c=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/README.md"}]},map:{prefixes:["map"],title:"Map",description:"Renders GeoJSON on an interactive map.",examples:[{query:"layout=a/b&a=map:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.json&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.json"}]},mermaid:{prefixes:["mermaid","mermaid-inline"],title:"Mermaid Diagrams",description:"Renders [mermaid](https://mermaid-js.github.io/mermaid/) diagrams.",examples:[{query:'layout:(a-b)/c&a=mermaid:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/mermaid-example.mmd&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/mermaid-example.mmd&c=mermaid-inline:graph LR; "mermaid-inline prefix" --\x3e URL; "Mermaid source" --\x3e URL'}]},vega:{prefixes:["vega","vega-inline"],title:"Vega Graphs",description:"Renders [Vega](https://vega.github.io/vega/) and [Vega-Lite](https://vega.github.io/vega-lite/) graphs.",examples:[{query:"layout=(a-c)/b?a=vega:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.json&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.json&c=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.csv"},{intro:"You can specify the graph by putting JSON in the URL. The JSON can then load values by URL (like the JSON shown in the previous example), or you can embed the values in the JSON.",query:'url=vega-inline={"data": {"values": [{factor: "awesomeness", score: 10}, {factor: "weirdness", score: 3}, {factor: "color", score: 7}]}, "mark": "bar", "encoding": {"x": {"field": "factor", "type": "nominal"}, "y": {"field": "score", "type": "quantitative"}, "color": {"field": "factor", "type": "nominal"}}}'}]}};
},{}],"Ht29":[function(require,module,exports) {
"use strict";var n=t(require("../src/views/handlers.yaml"));function t(n){return n&&n.__esModule?n:{default:n}}function r(n,t){return i(n)||c(n,t)||o(n,t)||e()}function e(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(n,t){if(n){if("string"==typeof n)return a(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(r):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(n,t):void 0}}function a(n,t){(null==t||t>n.length)&&(t=n.length);for(var r=0,e=new Array(t);r<t;r++)e[r]=n[r];return e}function c(n,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var r=[],e=!0,o=!1,a=void 0;try{for(var c,i=n[Symbol.iterator]();!(e=(c=i.next()).done)&&(r.push(c.value),!t||r.length!==t);e=!0);}catch(u){o=!0,a=u}finally{try{e||null==i.return||i.return()}finally{if(o)throw a}}return r}}function i(n){if(Array.isArray(n))return n}var u="https://flexivis.infrastruktur.link/";function l(n){return"<ul>\n"+Object.values(n).map(function(n){var t=n.title;return'    <li><a href="'.concat(t.toLowerCase().replace(/ /g,"-"),'">').concat(t,"</a></li>\n")}).join("")+"</ul>\n"}function f(n){return Object.entries(n).map(s).join("\n\n")}function s(n){var t=r(n,2),e=t[0],o=t[1],a=o.title,c=o.prefixes,i=o.description,u=o.examples;return"### ".concat(a,"\n\nView specification prefixes: ").concat(c.map(function(n){return"`"+n+"`"}).join(", "),"\n\n").concat(i,"\n\n").concat(u.map(function(n,t){return p(e,t+1,n)}).join("\n"))}function p(n,t,r){var e=r.query||"url=".concat(r),o="".concat(u,"?").concat(e);return(r.intro?r.intro+"\n\n":"")+("```\n"+"".concat(o,"\n")+"```\n")+(!1===r.screenshot?"":"\n[![rendering of the URL shown above](example-".concat(n,"-").concat(t,".png)](").concat(o,")\n"))}console.log(l(n.default)),console.log(""),console.log(f(n.default));
},{"../src/views/handlers.yaml":"d6Zo"}]},{},["Ht29"], null)
//# sourceMappingURL=/readme.js.map