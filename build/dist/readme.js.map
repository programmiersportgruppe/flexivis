{"version":3,"sources":["../src/views/handlers.yaml","readme.js"],"names":["module","exports","frame","prefixes","title","description","examples","query","intro","screenshot","markdown","json","text","map","mermaid","vega","baseUrl","renderToc","handlers","Object","values","toLowerCase","replace","join","renderDescriptions","entries","renderDescription","name","p","e","i","renderExample","handler","number","example","rawUrl","console","log"],"mappings":"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","file":"readme.js","sourceRoot":"..","sourcesContent":["module.exports={frame:{prefixes:[\"http\",\"https\",\"file\"],title:\"Regular Content\",description:\"HTTP/S URLs can be loaded and displayed in IFrames.\",examples:[{query:\"layout=a/b&a=https://wikipedia.org&b=http://example.com\"},{intro:\"If your browser environment permits it (e.g. if you build Flexivis locally and open it from a `file:` URL), you can also load content from `file:` URLs. This can be useful to visualise build outputs, for example.\",query:\"layout=a/b&a=file://results.html&b=file://generated-image.png\",screenshot:!1}]},markdown:{prefixes:[\"md\",\"md-inline\"],title:\"Markdown\",description:\"Render [Markdown](https://en.wikipedia.org/wiki/Markdown) content.\",examples:[{query:\"layout=a/b&a=md:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.md&b=md-inline:This is _inline_ markdown content\"}]},json:{prefixes:[\"json\",\"json-inline\"],title:\"JSON\",description:\"Render JSON in an interactive viewer.\",examples:[{query:'layout=a/b&a=json:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/package-lock.json&b=json-inline:{\"name\": \"inline JSON example\", id: 42, values: [\"foo\", \"baz\", \"bar\"]}'}]},text:{prefixes:[\"text\",\"text-inline\"],title:\"Text\",description:\"Display plain text. This can be used to display the source of a visualisation alongside the visualisation itself.\",examples:[{query:\"layout=(a-b)/c&a=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/plaintext.txt&b=text-inline:This is just _plain_ inline text&c=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/README.md\"}]},map:{prefixes:[\"map\"],title:\"Map\",description:\"Renders GeoJSON on an interactive map.\",examples:[{query:\"layout=a/b&a=map:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.json&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/berlin-walk.json\"}]},mermaid:{prefixes:[\"mermaid\",\"mermaid-inline\"],title:\"Mermaid Diagrams\",description:\"Renders [mermaid](https://mermaid-js.github.io/mermaid/) diagrams.\",examples:[{query:'layout:(a-b)/c&a=mermaid:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/mermaid-example.mmd&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/mermaid-example.mmd&c=mermaid-inline:graph LR; \"mermaid-inline prefix\" --\\x3e URL; \"Mermaid source\" --\\x3e URL'}]},vega:{prefixes:[\"vega\",\"vega-inline\"],title:\"Vega Graphs\",description:\"Renders [Vega](https://vega.github.io/vega/) and [Vega-Lite](https://vega.github.io/vega-lite/) graphs.\",examples:[{query:\"layout=(a-c)/b?a=vega:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.json&b=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.json&c=text:https://raw.githubusercontent.com/programmiersportgruppe/flexivis/master/docs/samples/cloc.csv\"},{intro:\"You can specify the graph by putting JSON in the URL. The JSON can then load values by URL (like the JSON shown in the previous example), or you can embed the values in the JSON.\",query:'url=vega-inline={\"data\": {\"values\": [{factor: \"awesomeness\", score: 10}, {factor: \"weirdness\", score: 3}, {factor: \"color\", score: 7}]}, \"mark\": \"bar\", \"encoding\": {\"x\": {\"field\": \"factor\", \"type\": \"nominal\"}, \"y\": {\"field\": \"score\", \"type\": \"quantitative\"}, \"color\": {\"field\": \"factor\", \"type\": \"nominal\"}}}'}]}};","import handlers from \"../src/views/handlers.yaml\"\n\nconst baseUrl = \"https://flexivis.infrastruktur.link/\";\n\nconsole.log(renderToc(handlers));\nconsole.log(\"\");\nconsole.log(renderDescriptions(handlers));\n\nfunction renderToc(handlers) {\n    return \"<ul>\\n\" + Object.values(handlers)\n        .map(({title}) => `    <li><a href=\"${title.toLowerCase().replace(/ /g, \"-\")}\">${title}</a></li>\\n`)\n        .join(\"\") + \"</ul>\\n\";\n}\n\nfunction renderDescriptions(handlers) {\n    return Object.entries(handlers).map(renderDescription).join(\"\\n\\n\");\n}\n\nfunction renderDescription([name, {title, prefixes, description, examples}]) {\n    return `### ${title}\\n\\nView specification prefixes: ${\n        prefixes.map(p => \"`\" + p + \"`\").join(\", \")\n    }\\n\\n${description}\\n\\n${examples.map((e, i) => renderExample(name, i + 1, e)).join(\"\\n\")}`;\n}\n\nfunction renderExample(handler, number, example) {\n    const query = example.query || `url=${example}`;\n    const rawUrl = `${baseUrl}?${query}`;\n\n    const intro = example.intro ? example.intro + \"\\n\\n\" : \"\";\n    const url = \"```\\n\" + `${rawUrl}\\n` + \"```\\n\";\n    const screenshot = example.screenshot === false ? '' : `\\n[![rendering of the URL shown above](example-${handler}-${number}.png)](${rawUrl})\\n`;\n    \n    return intro + url + screenshot;\n}\n"]}